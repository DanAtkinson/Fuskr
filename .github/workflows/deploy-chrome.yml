name: Deploy to Chrome Web Store

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v5.0.2
  workflow_dispatch:  # Allow manual triggering
    inputs:
      version:
        description: 'Version to deploy (e.g., 5.0.2)'
        required: true
        type: string

jobs:
  deploy-chrome:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build extension
        run: npm run build
        
      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "TAG_NAME=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
            echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build release notes (includes Product Details)
        id: notes
        run: |
          STORE_URL="https://chrome.google.com/webstore/detail/${{ secrets.CHROME_EXTENSION_ID }}"
          echo "BODY<<'EOF'" >> $GITHUB_OUTPUT
          echo "## ðŸš€ Fuskr Extension ${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo "This release has been automatically deployed to the Chrome Web Store." >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo "### ðŸ”— Store listing" >> $GITHUB_OUTPUT
          echo "${STORE_URL}" >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo "### ðŸ“¦ Downloads" >> $GITHUB_OUTPUT
          echo "- Chrome/Edge/Chromium: available on the Chrome Web Store" >> $GITHUB_OUTPUT
          echo "- Firefox: 'fuskr-firefox-${{ steps.version.outputs.VERSION }}.zip' (manual installation)" >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo "### ï¿½ Product details (for store)" >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          if [ -f store/chrome-product-details.md ]; then
            cat store/chrome-product-details.md >> $GITHUB_OUTPUT
          else
            echo "Product details file not found (store/chrome-product-details.md)." >> $GITHUB_OUTPUT
          fi
          echo >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo "### ðŸ”§ Manual Installation (Development)" >> $GITHUB_OUTPUT
          echo "1. Download 'fuskr-chromium-${{ steps.version.outputs.VERSION }}.zip'" >> $GITHUB_OUTPUT
          echo "2. Extract the ZIP file" >> $GITHUB_OUTPUT
          echo "3. Open Chrome â†’ Extensions â†’ Enable Developer Mode" >> $GITHUB_OUTPUT
          echo "4. Click 'Load unpacked' and select the extracted folder" >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo "### ðŸ“‹ Changes" >> $GITHUB_OUTPUT
          echo "See the commit history for detailed changes in this release." >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload product details as artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-product-details
          path: store/chrome-product-details.md
          if-no-files-found: warn
          
      - name: Upload to Chrome Web Store
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: ./dist/fuskr-chromium.zip
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          publish: true  # Set to false for draft uploads
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.version.outputs.TAG_NAME }}
          name: Fuskr Extension ${{ steps.version.outputs.TAG_NAME }}
          body: ${{ steps.notes.outputs.BODY }}
          files: |
            dist/fuskr-chromium.zip
            dist/fuskr-firefox.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Notify Success
        if: success()
        run: |
          echo "ðŸŽ‰ Successfully deployed Fuskr Extension ${{ steps.version.outputs.VERSION }} to Chrome Web Store!"
          echo "ðŸ“¦ Extension ID: ${{ secrets.CHROME_EXTENSION_ID }}"
          echo "ðŸ”— Chrome Web Store: https://chrome.google.com/webstore/detail/${{ secrets.CHROME_EXTENSION_ID }}"
