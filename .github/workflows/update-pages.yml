name: Update GitHub Pages

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags
  workflow_dispatch:  # Allow manual triggering
    inputs:
      version:
        description: 'Version to deploy (e.g., 5.0.2)'
        required: false
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update-pages:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Extract version information
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "push" ] && [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            # Fallback to package.json version
            echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          fi
          echo "YEAR=$(date +%Y)" >> $GITHUB_OUTPUT
          
      - name: Get extension ID from manifest
        id: extension-id  
        run: |
          echo "EXTENSION_ID=$(node scripts/get-extension-id.js | grep -o 'glieaboaghdnlglpkekghloldikefofo')" >> $GITHUB_OUTPUT
          
      - name: Get installation statistics (mock data for now)
        id: stats
        run: |
          # In the future, this could fetch real Chrome Web Store statistics
          # For now, we'll use placeholder values
          echo "INSTALL_COUNT=10000" >> $GITHUB_OUTPUT
          
      - name: Process HTML template
        run: |
          # Replace template variables in the HTML
          sed -i "s/{{VERSION}}/${{ steps.version.outputs.VERSION }}/g" docs/index.html
          sed -i "s/{{EXTENSION_ID}}/${{ steps.extension-id.outputs.EXTENSION_ID }}/g" docs/index.html  
          sed -i "s/{{YEAR}}/${{ steps.version.outputs.YEAR }}/g" docs/index.html
          sed -i "s/{{INSTALL_COUNT}}/${{ steps.stats.outputs.INSTALL_COUNT }}/g" docs/index.html
          
      - name: Create CNAME file
        run: |
          # Uncomment and modify if you have a custom domain
          # echo "fuskr.yourdomain.com" > docs/CNAME
          echo "# GitHub Pages will serve from danatkinson.github.io/Fuskr/" > docs/CNAME.example
          
      - name: Create .nojekyll file
        run: |
          # Prevent Jekyll processing
          touch docs/.nojekyll
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Update README with new GitHub Pages URL
        run: |
          echo "âœ… GitHub Pages updated successfully!"
          echo "ðŸ”— Site URL: https://danatkinson.github.io/Fuskr/"
          echo "ðŸ“¦ Version: ${{ steps.version.outputs.VERSION }}"
          echo "ðŸ†” Extension ID: ${{ steps.extension-id.outputs.EXTENSION_ID }}"
